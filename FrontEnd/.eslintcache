[{"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\index.tsx":"1","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\AppLayoutContainer.tsx":"2","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Constants.ts":"3","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\useEffectWithSkipDidMount.js":"4","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Auth\\Register.tsx":"5","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Auth\\Login.tsx":"6","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\News\\NewsList.tsx":"7","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Events\\EventsPosts.jsx":"8","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Profile\\EditProfile.tsx":"9","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Requests.ts":"10","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\MainProfile.tsx":"11","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\News\\DetailNewModal.tsx":"12","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\AllUsers.tsx":"13","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Profile\\features\\MainProfileContainer.tsx":"14","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\User.tsx":"15","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Events\\DetailEventsModal.tsx":"16","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Profile\\ProfileContainer.tsx":"17","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\App.tsx":"18","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Navigation.tsx":"19","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Footer\\Footer.tsx":"20"},{"size":711,"mtime":1616445058018,"results":"21","hashOfConfig":"22"},{"size":544,"mtime":1623256525137,"results":"23","hashOfConfig":"22"},{"size":3035,"mtime":1624214339380,"results":"24","hashOfConfig":"22"},{"size":827,"mtime":1620756309569,"results":"25","hashOfConfig":"22"},{"size":4017,"mtime":1624198140935,"results":"26","hashOfConfig":"22"},{"size":3464,"mtime":1624214671590,"results":"27","hashOfConfig":"22"},{"size":4524,"mtime":1624207363818,"results":"28","hashOfConfig":"22"},{"size":6320,"mtime":1624214845454,"results":"29","hashOfConfig":"22"},{"size":8632,"mtime":1624214433087,"results":"30","hashOfConfig":"22"},{"size":2454,"mtime":1624215369429,"results":"31","hashOfConfig":"22"},{"size":3953,"mtime":1624215284661,"results":"32","hashOfConfig":"22"},{"size":2346,"mtime":1624206602148,"results":"33","hashOfConfig":"22"},{"size":2876,"mtime":1624212605826,"results":"34","hashOfConfig":"22"},{"size":1498,"mtime":1624212842819,"results":"35","hashOfConfig":"22"},{"size":863,"mtime":1624214201371,"results":"36","hashOfConfig":"22"},{"size":1234,"mtime":1624212320342,"results":"37","hashOfConfig":"22"},{"size":1359,"mtime":1624214293667,"results":"38","hashOfConfig":"22"},{"size":757,"mtime":1624214272587,"results":"39","hashOfConfig":"22"},{"size":1467,"mtime":1624214848172,"results":"40","hashOfConfig":"22"},{"size":1724,"mtime":1624214744716,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1yjy1no",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\index.tsx",["89"],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\AppLayoutContainer.tsx",[],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Constants.ts",[],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\useEffectWithSkipDidMount.js",["90","91","92"],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Auth\\Register.tsx",["93"],"import React, {useCallback, useState} from 'react';\r\nimport {Button, Col, Container, Form} from \"react-bootstrap\";\r\n\r\nconst Register = () => {\r\n    const [login, setLogin] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n\r\n    // const register = useCallback(async () => {\r\n    //     const result = await fetch(`http://backend/BackEnd/personal/registration.php`, {\r\n    //         method: 'POST',\r\n    //         body: JSON.stringify({\r\n    //             LOGIN: login,\r\n    //             PASSWORD: password,\r\n    //         })\r\n    //       });\r\n    //     return result.json()\r\n    // }, [login, password]);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        const formData = new FormData(form);\r\n        const result = await fetch(`http://backend/BackEnd/personal/registration.php`, {\r\n            method: 'post',\r\n            body: formData\r\n          });\r\n        return result.json()\r\n    }\r\n\r\n\r\n    return (\r\n        <Container fluid style={{padding:'0px'}}>\r\n            <Form onSubmit={onSubmit}  className={'main__register-form'}>\r\n                <div style={{textAlign: 'center', fontSize: '25px', fontWeight: 400, marginBottom: 10}}>РЕГИСТРАЦИЯ</div>\r\n                <Col md={6} xl={2} style={{margin: 'auto'}}>\r\n                    <Form.Group className={'input-text'} controlId=\"formBasicEmail\">\r\n                        <Form.Control name='NAME' placeholder=\"Введите имя\" />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md={6} xl={2} style={{margin: 'auto'}}>\r\n                    <Form.Group className={'input-text'} controlId=\"formBasicEmail\">\r\n                        <Form.Control name='LAST_NAME' placeholder=\"Введите фаиилию\" />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md={6} xl={2} style={{margin: 'auto'}}>\r\n                    <Form.Group className={'input-text'} controlId=\"formBasicEmail\">\r\n                        <Form.Control name='GROUP_NUMBER' placeholder=\"Введите номер группы\" />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md={6} xl={2} style={{margin: 'auto'}}>\r\n                    <Form.Group className={'input-text'} controlId=\"formBasicEmail\">\r\n                        <Form.Control name='LOGIN' type=\"email\" value={login} onChange={(e) => setLogin(e.target.value) } placeholder=\"Введите email\" />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md={6} xl={2} style={{margin: 'auto'}}>\r\n                    <Form.Group className={'input-text'} controlId=\"formBasicPassword\">\r\n                        <Form.Control name='PASSWORD' type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Введите пароль\" />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md={6} xl={2} style={{margin: 'auto'}}>\r\n                <Form.Group>\r\n                    <Form.File\r\n                        type=\"file\"\r\n                        name={'PREVIEW_PICTURE'}\r\n                        id={'inputGroupFile01'}\r\n                        label={'Аватар'}\r\n                        data-browse=\"Выбрать файл\"\r\n                        custom\r\n                    />\r\n                </Form.Group>\r\n\r\n                </Col>\r\n               \r\n                <Col md={3} xs ={8} style={{display:'flex',margin:'auto',justifyContent: 'center'}}>\r\n                    <Button style={{width:'100%', marginTop: '15px'}}\r\n                    \r\n                            type='submit'\r\n                            variant=\"success\"\r\n                            className={'submit-btn'}>\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                </Col>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Auth\\Login.tsx",[],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\News\\NewsList.tsx",["94","95"],"import React, {useCallback, useState} from 'react';\r\nimport New from \"./New\";\r\nimport {Col, Container, Form} from \"react-bootstrap\";\r\nimport { useAsync } from \"@umijs/hooks\";\r\nimport {addNewInitialModel, UserTypes} from \"../Constants\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getCookieByName} from \"../Auth/Login\";\r\nimport {SelectButton} from \"../Events/EventsPosts\";\r\nimport {ClockLoader} from \"react-spinners\";\r\nimport AddNewOrEvent from \"../AddNewOrEvent\";\r\nimport {addNew, getNews} from \"../Requests\";\r\n\r\nexport interface NewI {\r\n    ID: string\r\n    NAME: string\r\n    PREVIEW_PICTURE: string\r\n    PREVIEW_TEXT: string\r\n    userId: string\r\n    token?: string\r\n    LAST_NAME?: string\r\n    LAST_AUTH?: boolean\r\n}\r\n\r\nexport interface NewsListI {\r\n    count_news_all: string\r\n    this_page: number\r\n    values: Array<NewI>\r\n}\r\n\r\n\r\nconst NewsList = () => {\r\n    const { userId } : UserTypes = useParams();\r\n    const token = getCookieByName('access_token');\r\n    const isAdmin = getCookieByName('is_admin') === \"1\";\r\n\r\n    const { data, loading, run } = useAsync<NewsListI>(() => getNews(userId, token) , []);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const [fields, setFields] = useState(addNewInitialModel);\r\n\r\n    const onFieldsChange = useCallback((value, name) => {\r\n        setFields(fields.map(el => el.name === name ? {...el, value: value} : {...el}))\r\n    },[fields]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        setShowModal(false)\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(async (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        const formData = new FormData(form);\r\n        await addNew(formData);\r\n        await run();\r\n        setShowModal(false)\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#ebedf0', height: \"100%\", width: \"100%\",  overflow: \"auto\"}}>\r\n            <Container style={{display: 'flex', padding: 0, justifyContent: 'center', paddingBottom: 80}}>\r\n                <Col xl={12} xs={12}>\r\n                    {\r\n                        isAdmin && <SelectButton style={{ margin: '12px auto',width: 250, color: '#fff' }} onClick={() => {\r\n                            setShowModal(true)\r\n                        }}>\r\n                            Добавить новость\r\n                        </SelectButton>\r\n                    }\r\n                    {\r\n                        data?.values?.length === 0 && <div style={{height: 350, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                            <div style={{display: 'flex', justifyContent: 'center', fontSize: 20, color: '#000', background: '#fff', width: '100%', height: 120, borderRadius: 10, alignItems: 'center' }}>\r\n                                Новостей нет\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        loading && <div style={{height: 350, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                            <ClockLoader color={'#283593'} loading={loading} />\r\n                        </div>\r\n                    }\r\n                    {\r\n                    !loading && data?.values?.map((el) => <New\r\n                                                              NAME={el.NAME}\r\n                                                              ID={el.ID}\r\n                                                              userId={userId}\r\n                                                              token={token}\r\n                                                              PREVIEW_PICTURE={el.PREVIEW_PICTURE}\r\n                                                              PREVIEW_TEXT={el.PREVIEW_TEXT}/> )\r\n                    }\r\n                </Col>\r\n            </Container>\r\n            {\r\n                showModal && <AddNewOrEvent onSubmit={onSubmit}\r\n                                            onFieldsChange={onFieldsChange}\r\n                                            fields={fields}\r\n                                            token={token}\r\n                                            header={'Добавление новости'}\r\n                                            userId={userId}\r\n                                            show={showModal}\r\n                                            handleClose={handleClose}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsList;\r\n","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Events\\EventsPosts.jsx",["96","97","98","99"],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Profile\\EditProfile.tsx",["100","101","102","103"],"import { useAsync } from '@umijs/hooks';\r\nimport React, {useState} from 'react';\r\nimport { useEffect } from 'react';\r\nimport {Button, Col, Container, Form} from \"react-bootstrap\";\r\nimport { getCookieByName } from '../Auth/Login';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserTypes } from '../Constants';\r\nimport { editProfile, getUserFields } from '../Requests';\r\n\r\nconst EditProfile = () => {\r\n    const [profileFields, setProfileFields] = useState({\r\n        name: '',\r\n        lastName: '',\r\n        middleName: '',\r\n        numberOfGroup: '',\r\n        creditBookNumber: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        avatar: ''\r\n    });\r\n    const userId = getCookieByName('user_id');\r\n    const token = getCookieByName('access_token');\r\n    const { otherUserId } : UserTypes = useParams();\r\n\r\n    const { data, loading, run } = useAsync<any>(() => getUserFields(userId, otherUserId) , []);\r\n    useEffect(() => {\r\n        if(data) {\r\n            setProfileFields({\r\n                ...profileFields,\r\n                name: data?.NAME || '',\r\n                lastName: data.LAST_NAME || '',\r\n                middleName: data?.MIDDLE_NAME || '',\r\n                numberOfGroup: data?.GROUP_NUMBER || '',\r\n                creditBookNumber: data?.CREDIT_BOOK_NUMBER,\r\n                email: data?.EMAIL,\r\n                phoneNumber: data?.PHONE_NUMBER,\r\n                avatar: data?.PREVIEW_PICTURE?.replace('W:/domains/', 'http://')\r\n            })\r\n        }\r\n    }, [data])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        const formData = new FormData(form);\r\n        const result = editProfile(formData)\r\n        alert('Успешно')\r\n    }\r\n\r\n    return (\r\n        <Container style={{display: 'flex', justifyContent: 'center', paddingBottom: 100}}>\r\n            <div style={{height: \"100%\", width: \"100%\",  overflow: \"auto\"}}>\r\n                <div style={{display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\r\n                    <Form onSubmit={onSubmit} className={'main__register-form'} style={{marginTop: 15}}>\r\n                        <Col md={6} xl={8} style={{margin: '20px auto',}}>\r\n                            <Form.Group className={'input-text'} style={{height: '100%'}} controlId=\"formBasicEmail\">\r\n                                <Form.Label>Имя</Form.Label>\r\n                                <Form.Control name='NAME' value={profileFields.name} onChange={(e) => {\r\n                                    setProfileFields({...profileFields, name: e.target.value})\r\n                                }} placeholder=\"Введите Имя\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} xl={8} style={{margin: '10px auto'}}>\r\n                            <Form.Group className={'input-text'} style={{height: '100%'}} controlId=\"formBasicPassword\">\r\n                                <Form.Label>Фамилия</Form.Label>\r\n                                <Form.Control name='LAST_NAME' value={profileFields.lastName}\r\n                                              onChange={(e) => setProfileFields({...profileFields, lastName: e.target.value})}\r\n                                              placeholder=\"Введите фамилию\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} xl={8} style={{margin: 'auto'}}>\r\n                            <Form.Group className={'input-text'} style={{height: '100%'}} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Отчество</Form.Label>\r\n                                <Form.Control name='MIDDLE_NAME' value={profileFields.middleName}\r\n                                              onChange={(e) => setProfileFields({...profileFields, middleName: e.target.value})}\r\n                                              placeholder=\"Введите отчество\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} xl={8} style={{margin: 'auto'}}>\r\n                            <Form.Group className={'input-text'} style={{height: '100%'}} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Номер зачётеной книжки</Form.Label>\r\n                                <Form.Control type={'number'} name='CREDIT_BOOK_NUMBER' value={profileFields.creditBookNumber}\r\n                                              onChange={(e) => setProfileFields({...profileFields, creditBookNumber: e.target.value})}\r\n                                              placeholder=\"Введите номер зачетной книжки\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} xl={8} style={{margin: 'auto'}}>\r\n                            <Form.Group className={'input-text'} style={{height: '100%'}} controlId=\"formBasicPassword\">\r\n                                <Form.Label>Номер группы</Form.Label>\r\n                                <Form.Control type={'number'} name='GROUP_NUMBER' value={profileFields.numberOfGroup}\r\n                                              onChange={(e) => setProfileFields({...profileFields, numberOfGroup: e.target.value})}\r\n                                              placeholder=\"Введите номер группы\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} xl={8} style={{margin: 'auto'}}>\r\n                            <Form.Group className={'input-text'} style={{height: '100%'}} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Номер телефона</Form.Label>\r\n                                <Form.Control name='PHONE_NUMBER' value={profileFields.phoneNumber}\r\n                                              onChange={(e) => setProfileFields({...profileFields, phoneNumber: e.target.value})}\r\n                                              placeholder=\"Введите номер телефона\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} xl={8} style={{margin: 'auto'}}>\r\n                            <Form.Group className={'input-text'} style={{height: '100%'}}  controlId=\"formBasicPassword\">\r\n                            <Form.Label>Email</Form.Label>\r\n                                <Form.Control name='EMAIL' value={profileFields.email}\r\n                                              onChange={(e) => setProfileFields({...profileFields, email: e.target.value})}\r\n                                              placeholder=\"Введите email\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} xl={8} style={{margin: 'auto'}}>\r\n                        <Form.File\r\n                            style={{height: '100%'}}\r\n                            type=\"file\"\r\n                            label={'Аватар'}\r\n                            name={'PREVIEW_PICTURE'}\r\n                            id={'inputGroupFile01'}\r\n                            data-browse=\"Выбрать файл\"\r\n                            onChange={(e) => {\r\n                                alert('Аватар загружен')\r\n                            }}\r\n                            custom\r\n                        />\r\n                        </Col>\r\n                        \r\n                        <Form.Group className={'input-text'} style={{margin: 0}} controlId=\"title\">\r\n                            <Form.Control name='TOKEN' value={token} type='hidden' />\r\n                            <Form.Control name='USER_ID' value={userId} type='hidden' />\r\n                        </Form.Group>\r\n                        <Col md={6} xs ={8} style={{display:'flex',margin:'auto',justifyContent: 'center'}}>\r\n                            <Button variant=\"success\" onClick={() => {\r\n                                console.log('lol')\r\n                            }} type='submit' className={'submit-btn'}>\r\n                                Сохранить\r\n                            </Button>\r\n                        </Col>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Requests.ts",[],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\MainProfile.tsx",["104","105","106"],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\News\\DetailNewModal.tsx",[],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\AllUsers.tsx",["107","108","109","110","111"],"import React, { useState } from 'react';\r\nimport {Col, Container, Modal} from \"react-bootstrap\";\r\nimport {UserTypes} from \"./Constants\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getCookieByName} from \"./Auth/Login\";\r\nimport {useAsync} from \"@umijs/hooks\";\r\nimport {getAllUsers} from \"./Requests\";\r\nimport {NewsListI} from \"./News/NewsList\";\r\nimport moment from 'moment'\r\nimport ModalContainer from './ModalContainer';\r\nimport User from './User';\r\nimport { useMemo } from 'react';\r\n\r\nconst AllUsers = () => {\r\n    const { userId } : UserTypes = useParams();\r\n    const token = getCookieByName('access_token');\r\n    const [userInfo, setUserInfo] = useState<any>(0)\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false)\r\n\r\n    const { data, loading, run } = useAsync<NewsListI>(() => getAllUsers(userId, token) , []);\r\n    const userModal = useMemo(() => show && <User otherUserID={userInfo} show={show} handleClose={handleClose} />, [show] )\r\n    return (\r\n        <Container style={{display: 'flex', justifyContent: 'center', padding: 0}}>\r\n            <div style={{height: \"100%\", width: \"100%\",  overflow: \"auto\"}}>\r\n                <div style={{display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\r\n                    <Col xs={12} style={{textAlign: 'center', height: 100, padding: 15}}>Список Пользователей</Col>\r\n                    {\r\n                        data?.values?.map(el =>  <div>\r\n                            <Col xs={12} onClick={() => {\r\n                    \r\n                                setUserInfo(el?.ID)\r\n                                setShow(true)\r\n                            }} style={{\r\n                                cursor: 'pointer',\r\n                                border: '1px solid #dce1e6',\r\n                                display: 'flex',\r\n                                background: '#fff',\r\n                                marginBottom: 3\r\n                            }}>\r\n                                <div style={{padding:`11px 14px 8px 0px`}}>\r\n                                    <img style={{width: 76, height: 'auto'}} src={el?.PREVIEW_PICTURE.replace('W:/domains/', 'http://')} alt=\"\"/>\r\n                                </div>\r\n                                <div>\r\n                                    <div style={{marginTop: 10, marginBottom: 3}}>{el?.LAST_NAME} {el?.NAME}</div>\r\n                                    <div style={{marginTop: 10, marginBottom: 3}}>был в сети {moment.unix(Number(el?.LAST_AUTH)).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                </div>\r\n                            </Col>\r\n                            {userModal}\r\n                        </div> )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AllUsers;\r\n","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Profile\\features\\MainProfileContainer.tsx",[],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\User.tsx",["112","113","114"],"import React from 'react';\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {UserTypes} from \"./Constants\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getCookieByName} from \"./Auth/Login\";\r\nimport ModalContainer from './ModalContainer';\r\nimport MainProfile from './Profile/features/components/MainProfile';\r\nimport EditProfile from './Profile/EditProfile';\r\n\r\nconst User = ({show, handleClose, otherUserID}) => {\r\n    const { userId } : UserTypes = useParams();\r\n    const token = getCookieByName('access_token');\r\n    \r\n    return (\r\n        <ModalContainer header={'Пользователь'} show={show} handleClose={handleClose}>\r\n            <Modal.Body style={{background: 'rgb(235, 237, 240)'}}>\r\n                <MainProfile otherUserID={otherUserID} />\r\n            </Modal.Body>\r\n        </ModalContainer>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Events\\DetailEventsModal.tsx",[],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Profile\\ProfileContainer.tsx",["115","116","117","118"],"import React, {useEffect, useMemo} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {menuTabs, TabsTypes, UserTypes} from \"../Constants\";\r\nimport Header from \"../Header/Header\";\r\nimport MainProfileContainer from \"./features/MainProfileContainer\";\r\nimport {useAsync} from \"@umijs/hooks\";\r\nimport {getCookieByName} from \"../Auth/Login\";\r\n\r\nconst ProfileContainer = () => {\r\n\r\n    const { userId } : UserTypes = useParams();\r\n    const { currentTab }: TabsTypes = useParams();\r\n\r\n\r\n\r\n    const getHeaderNameByCurrentTab = useMemo(() => {\r\n        switch (Number(currentTab)) {\r\n            case menuTabs.ALL_USERS:\r\n                return 'Все пользователи';\r\n            case menuTabs.NEWS:\r\n                return 'Новости';\r\n            case menuTabs.EVENTS:\r\n                return 'Все мероприятия';\r\n            case menuTabs.PROFILE:\r\n                return `@${userId}`;\r\n            case menuTabs.EDIT:\r\n                return 'Редактирование профиля'\r\n            default:\r\n                return 'Новости'\r\n        }\r\n    }, [currentTab]);\r\n\r\n    return (\r\n        <div>\r\n            <Header title={getHeaderNameByCurrentTab} isAuth/>\r\n            <MainProfileContainer currentTab={Number(currentTab)}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileContainer;\r\n","C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\App.tsx",[],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Navigation.tsx",["119","120"],"C:\\Users\\в\\Desktop\\openserver\\domains\\diplom\\FrontEnd\\src\\main\\Footer\\Footer.tsx",["121","122"],"import React from 'react';\r\nimport {Button, Col, Container} from \"react-bootstrap\";\r\nimport homeIcon from '../../images/home.png'\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {UserTypes} from \"../Constants\";\r\nimport { userInfo } from 'os';\r\n\r\ntype FooterT = {\r\n    isMobile?: boolean\r\n}\r\n\r\nconst Footer = ({isMobile}: FooterT): React.ReactElement => {\r\n    const { userId } : UserTypes = useParams();\r\n    if (!isMobile) {\r\n        return <div></div>\r\n    }\r\n    return (\r\n        <Container style={{ position: 'fixed', bottom: 0, left: 0, boxShadow: '0 0 10px rgba(0,0,0,0.5)',background: '#fff', zIndex: 2 }}>\r\n           <div className=\"footer\" >\r\n               <div style={{ width: '100%', display: 'flex', justifyContent: 'space-around' }}>\r\n                   <Link to={`/profile/${userId}/1/${userId}`}>\r\n                       <Col className='footer__item' xs={4} md={6} xl={2} style={{textAlign: 'center'}}>\r\n                           <img src={homeIcon} alt=\"\"/>\r\n                       </Col>\r\n                   </Link>\r\n                   <Link to={`/profile/${userId}/2/${userId}`}>\r\n                       <Col className='footer__item' xs={4} md={6} xl={2} style={{textAlign: 'center'}}>\r\n                           <img src={homeIcon} alt=\"\"/>\r\n                       </Col>\r\n                   </Link>\r\n                   <Link to={`/profile/${userId}/3/${userId}`}>\r\n                       <Col className='footer__item' xs={4} md={6} xl={2} style={{textAlign: 'center'}}>\r\n                           <img src={homeIcon} alt=\"\"/>\r\n                       </Col>\r\n                   </Link>\r\n               </div>\r\n           </div>\r\n       </Container>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n",{"ruleId":"123","severity":1,"message":"124","line":8,"column":9,"nodeType":"125","messageId":"126","endLine":8,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":20,"column":8,"nodeType":"125","endLine":20,"endColumn":12},{"ruleId":"129","severity":1,"message":"131","line":20,"column":8,"nodeType":"125","endLine":20,"endColumn":12,"suggestions":"132"},{"ruleId":"123","severity":1,"message":"133","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":27},{"ruleId":"123","severity":1,"message":"134","line":3,"column":25,"nodeType":"125","messageId":"126","endLine":3,"endColumn":29},{"ruleId":"129","severity":1,"message":"135","line":56,"column":8,"nodeType":"136","endLine":56,"endColumn":10,"suggestions":"137"},{"ruleId":"127","severity":1,"message":"138","line":1,"column":29,"nodeType":"125","messageId":"126","endLine":1,"endColumn":38},{"ruleId":"129","severity":1,"message":"139","line":52,"column":8,"nodeType":"136","endLine":52,"endColumn":44,"suggestions":"140"},{"ruleId":"127","severity":1,"message":"141","line":58,"column":19,"nodeType":"125","messageId":"126","endLine":58,"endColumn":26},{"ruleId":"129","severity":1,"message":"135","line":75,"column":8,"nodeType":"136","endLine":75,"endColumn":10,"suggestions":"142"},{"ruleId":"123","severity":1,"message":"141","line":25,"column":19,"nodeType":"125","messageId":"126","endLine":25,"endColumn":26},{"ruleId":"123","severity":1,"message":"143","line":25,"column":28,"nodeType":"125","messageId":"126","endLine":25,"endColumn":31},{"ruleId":"129","severity":1,"message":"144","line":40,"column":8,"nodeType":"136","endLine":40,"endColumn":14,"suggestions":"145"},{"ruleId":"123","severity":1,"message":"146","line":46,"column":15,"nodeType":"125","messageId":"126","endLine":46,"endColumn":21},{"ruleId":"123","severity":1,"message":"147","line":2,"column":9,"nodeType":"125","messageId":"126","endLine":2,"endColumn":38},{"ruleId":"123","severity":1,"message":"148","line":4,"column":23,"nodeType":"125","messageId":"126","endLine":4,"endColumn":35},{"ruleId":"123","severity":1,"message":"149","line":17,"column":11,"nodeType":"125","messageId":"126","endLine":17,"endColumn":18},{"ruleId":"123","severity":1,"message":"150","line":2,"column":25,"nodeType":"125","messageId":"126","endLine":2,"endColumn":30},{"ruleId":"123","severity":1,"message":"151","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":22},{"ruleId":"123","severity":1,"message":"141","line":21,"column":19,"nodeType":"125","messageId":"126","endLine":21,"endColumn":26},{"ruleId":"123","severity":1,"message":"143","line":21,"column":28,"nodeType":"125","messageId":"126","endLine":21,"endColumn":31},{"ruleId":"129","severity":1,"message":"152","line":22,"column":116,"nodeType":"136","endLine":22,"endColumn":122,"suggestions":"153"},{"ruleId":"123","severity":1,"message":"154","line":8,"column":8,"nodeType":"125","messageId":"126","endLine":8,"endColumn":19},{"ruleId":"123","severity":1,"message":"155","line":11,"column":13,"nodeType":"125","messageId":"126","endLine":11,"endColumn":19},{"ruleId":"123","severity":1,"message":"156","line":12,"column":11,"nodeType":"125","messageId":"126","endLine":12,"endColumn":16},{"ruleId":"123","severity":1,"message":"138","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"157","line":6,"column":9,"nodeType":"125","messageId":"126","endLine":6,"endColumn":17},{"ruleId":"123","severity":1,"message":"158","line":7,"column":9,"nodeType":"125","messageId":"126","endLine":7,"endColumn":24},{"ruleId":"129","severity":1,"message":"159","line":31,"column":8,"nodeType":"136","endLine":31,"endColumn":20,"suggestions":"160"},{"ruleId":"123","severity":1,"message":"161","line":3,"column":15,"nodeType":"125","messageId":"126","endLine":3,"endColumn":24},{"ruleId":"123","severity":1,"message":"162","line":4,"column":9,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"163","line":2,"column":9,"nodeType":"125","messageId":"126","endLine":2,"endColumn":15},{"ruleId":"123","severity":1,"message":"164","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":18},"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","no-unused-vars","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'fn' and 'fnExit'. Either include them or remove the dependency array. If 'fn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["165"],"'useCallback' is defined but never used.","'Form' is defined but never used.","React Hook useCallback has a missing dependency: 'run'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'useEffect' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'activeDateTab'. Either exclude it or remove the dependency array.",["167"],"'loading' is assigned a value but never used.",["168"],"'run' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profileFields'. Either include it or remove the dependency array. You can also do a functional update 'setProfileFields(p => ...)' if you only need 'profileFields' in the 'setProfileFields' call.",["169"],"'result' is assigned a value but never used.","'mainProfileContainerInterface' is defined but never used.","'SelectButton' is defined but never used.","'isAdmin' is assigned a value but never used.","'Modal' is defined but never used.","'ModalContainer' is defined but never used.","React Hook useMemo has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["170"],"'EditProfile' is defined but never used.","'userId' is assigned a value but never used.","'token' is assigned a value but never used.","'useAsync' is defined but never used.","'getCookieByName' is defined but never used.","React Hook useMemo has a missing dependency: 'userId'. Either include it or remove the dependency array.",["171"],"'useParams' is defined but never used.","'UserTypes' is defined but never used.","'Button' is defined but never used.","'userInfo' is defined but never used.",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"174","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [fn, fnExit]",{"range":"185","text":"186"},"Update the dependencies array to be: [run]",{"range":"187","text":"188"},"Update the dependencies array to be: [currentDateInterval]",{"range":"189","text":"190"},{"range":"191","text":"188"},"Update the dependencies array to be: [data, profileFields]",{"range":"192","text":"193"},"Update the dependencies array to be: [show, userInfo]",{"range":"194","text":"195"},"Update the dependencies array to be: [currentTab, userId]",{"range":"196","text":"197"},[645,649],"[fn, fnExit]",[1769,1771],"[run]",[1812,1848],"[currentDateInterval]",[2835,2837],[1500,1506],"[data, profileFields]",[982,988],"[show, userInfo]",[1051,1063],"[currentTab, userId]"]