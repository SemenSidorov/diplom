[{"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\EventsPosts.jsx":"1","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\MainProfileContainer.tsx":"2","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\MainProfile.tsx":"3","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\New.tsx":"4","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\index.tsx":"5","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\AppLayoutContainer.tsx":"6","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\ProfileContainer.tsx":"7","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\reportWebVitals.ts":"8","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\useEffectWithSkipDidMount.js":"9","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\EventsPage.tsx":"10","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\NewsList.tsx":"11","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Navigation.tsx":"12","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Auth\\Login.tsx":"13","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Auth\\Register.tsx":"14","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\DetailEventsModal.tsx":"15","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\App.tsx":"16","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Auth\\AuthContainer.tsx":"17","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\useDatePicker.ts":"18","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Constants.ts":"19","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Header\\Header.tsx":"20","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Preview\\Preview.tsx":"21","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Footer\\Footer.tsx":"22","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Chat\\Chat.tsx":"23","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Chat\\ChatItem.tsx":"24","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\addNews.tsx":"25"},{"size":5450,"mtime":1622993515793,"results":"26","hashOfConfig":"27"},{"size":1413,"mtime":1622990296455,"results":"28","hashOfConfig":"27"},{"size":1782,"mtime":1622992983980,"results":"29","hashOfConfig":"27"},{"size":882,"mtime":1622989929943,"results":"30","hashOfConfig":"27"},{"size":711,"mtime":1623092036325,"results":"31","hashOfConfig":"27"},{"size":529,"mtime":1620760741895,"results":"32","hashOfConfig":"27"},{"size":1648,"mtime":1622990199361,"results":"33","hashOfConfig":"27"},{"size":440,"mtime":1620760741910,"results":"34","hashOfConfig":"27"},{"size":827,"mtime":1620760741909,"results":"35","hashOfConfig":"27"},{"size":270,"mtime":1622573461004,"results":"36","hashOfConfig":"27"},{"size":2610,"mtime":1622997279311,"results":"37","hashOfConfig":"27"},{"size":1400,"mtime":1622990199361,"results":"38","hashOfConfig":"27"},{"size":3319,"mtime":1622989929929,"results":"39","hashOfConfig":"27"},{"size":1997,"mtime":1620760741897,"results":"40","hashOfConfig":"27"},{"size":1276,"mtime":1622994217643,"results":"41","hashOfConfig":"27"},{"size":766,"mtime":1623090075958,"results":"42","hashOfConfig":"27"},{"size":716,"mtime":1620760741896,"results":"43","hashOfConfig":"27"},{"size":4578,"mtime":1620760741909,"results":"44","hashOfConfig":"27"},{"size":943,"mtime":1622990199360,"results":"45","hashOfConfig":"27"},{"size":1134,"mtime":1620760741902,"results":"46","hashOfConfig":"27"},{"size":1812,"mtime":1620760741903,"results":"47","hashOfConfig":"27"},{"size":1662,"mtime":1622989929934,"results":"48","hashOfConfig":"27"},{"size":1141,"mtime":1623093698395,"results":"49","hashOfConfig":"27"},{"size":1472,"mtime":1623093130799,"results":"50","hashOfConfig":"27"},{"size":4729,"mtime":1623000774631,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"1yijrsr",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\EventsPosts.jsx",["116","117","118","119"],"import React, {useEffect, useMemo, useState} from 'react';\r\nimport Avatar from '../images/first.png';\r\nimport styled from 'styled-components'\r\nimport {useParams} from \"react-router-dom\";\r\nimport { useAsync } from \"@umijs/hooks\";\r\n\r\nimport {DATE_FILTER_KEYS, DATE_FILTER_VALUES, timeTabs, UserTypes} from \"./Constants\";\r\nimport useDatePicker from \"./useDatePicker\";\r\nimport DetailEventsModal from \"./Profile/features/components/DetailEventsModal\";\r\nimport {getCookieByName} from \"./Auth/Login\";\r\n\r\n\r\n//todo перенести в папку с методами\r\nconst getEvents = (isMyEvents, dateFrom, dateTo ,userId, token) => {\r\n    return fetch(`http://backend/BackEnd/events/all.php?METHOD=${isMyEvents ? 'get_for_user' : ''}&TOKEN=${token}&DATE_START=${dateFrom}&DATE_EXP=${dateTo}&USER_ID=${userId}`).then(res => res.json());\r\n};\r\n\r\nconst EventsPosts = ({isMyEvents = false}) => {\r\n    const token = getCookieByName('access_token');\r\n    const [activeDateTab, setActiveDateTab] = useState(DATE_FILTER_KEYS.day);\r\n    const [show, setShow] = useState(false);\r\n    const [currentModalData, setCurrentModalData] = useState([]);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [dateFrom,\r\n        dateTo,\r\n        onPrevDateClick,\r\n        onNextDateClick] = useDatePicker(activeDateTab, DATE_FILTER_KEYS);\r\n\r\n\r\n\r\n    const currentDateInterval = useMemo(() => {\r\n        if (activeDateTab === DATE_FILTER_KEYS.day) {\r\n            return dateFrom.format('DD MMMM YYYY')\r\n        }\r\n        const monthDifference = dateFrom.format(dateTo.format('MM')) - dateFrom.format('MM');\r\n        return `${dateFrom.format(monthDifference > 0 ? 'DD MMM' : 'DD')}—${dateTo.format('DD MMM YYYY')}`\r\n    }, [dateFrom, dateTo, activeDateTab]);\r\n\r\n\r\n    const currentDatePickerContainerWidth = useMemo(() => (\r\n        currentDateInterval.length < 19 ? 240 : 300\r\n    ), [activeDateTab, currentDateInterval]);\r\n\r\n    const { userId } = useParams();\r\n\r\n    const { data, loading } = useAsync(() => getEvents(isMyEvents, dateFrom.format('DD-MM-YYYY'), dateTo.format('DD-MM-YYYY'), userId, token) , [dateFrom, dateTo]);\r\n\r\n    return (\r\n        <div style={{\r\n            borderRadius: 30,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            flexDirection: \"column\",\r\n            flexWrap: \"wrap\",\r\n            color: '#fff'\r\n        }}>\r\n    <SelectButtonContainer>\r\n        {\r\n            timeTabs.map(el => <SelectButton key={el.name}\r\n                                             onClick={() => setActiveDateTab(el.id)}\r\n                                             style={el.name !== DATE_FILTER_VALUES[activeDateTab]\r\n                                                 ? { backgroundColor: '#F0F2F4', color: '#000' }\r\n                                                 : {} }\r\n            >\r\n                {el.name}\r\n            </SelectButton>)\r\n        }\r\n    </SelectButtonContainer>\r\n    <DatePickerContainer currentWidth={currentDatePickerContainerWidth}>\r\n        <DatePickerClickBoxes isLeft onClick={onPrevDateClick}>\r\n            <img src=\"../../../Icons/webview-back.svg\" alt=\"\"/>\r\n        </DatePickerClickBoxes>\r\n        <div style={{\r\n            color: '#000',\r\n            fontWeight: 500,\r\n            padding: '5px 0px',\r\n        }}>\r\n            {currentDateInterval}\r\n        </div>\r\n        <DatePickerClickBoxes onClick={onNextDateClick}>\r\n            {/*<img style={} src/>*/}\r\n        </DatePickerClickBoxes>\r\n    </DatePickerContainer>\r\n    {\r\n        data?.length && data?.map(el => {\r\n            return <div style={{\r\n                height: 134,\r\n                borderRadius: 35,\r\n                backgroundImage: `url(${Avatar})`,\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat',\r\n                marginTop: '10px'\r\n            }}\r\n                        onClick={() => {\r\n                            setCurrentModalData(el);\r\n                            handleShow()}}\r\n\r\n            >\r\n                {el.NAME}\r\n            </div>\r\n        })\r\n    }\r\n    <DetailEventsModal userId={userId} id={currentModalData?.ID} text={currentModalData?.PREVIEW_TEXT} token={token} header={currentModalData?.NAME} show={show} handleClose={handleClose} />\r\n</div>\r\n    );\r\n};\r\n\r\n\r\nexport const DatePickerContainer = styled.div`\r\n     ${props => `display: flex;\r\n     width: ${props.currentWidth}px;\r\n     height: 35px; \r\n     margin: auto;\r\n     border: 1px solid #D9D9D9;\r\n     border-radius: 10px; \r\n     justify-content: space-between;\r\n     margin-top: 10px;`}\r\n`;\r\n\r\nexport const DatePickerClickBoxes = styled.div`\r\n ${props => `\r\n    align-self: center;\r\n    color: black;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    padding: 6px 18.5px;\r\n    border-right: ${props.isLeft ? ' 1px solid #D9D9D9' : ''} ;\r\n    border-left: ${!props.isLeft ? '1px solid #D9D9D9' : ''}\r\n  `}\r\n`;\r\nexport const SelectButtonContainer = styled.div`\r\n    align-self: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 15px;\r\n`;\r\n\r\nexport const SelectButton = styled.div`\r\n  background-color: #283593;\r\n  font-size: 16px;\r\n  min-width: 55px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  margin: 0px 5px;\r\n  line-height:1.5;\r\n  margin-bottom:10px;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 8px;\r\n  border-radius: 100px;\r\n  align-self: center\r\n`;\r\n\r\n\r\nexport default EventsPosts;\r\n\r\n\r\n",["120","121"],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\MainProfileContainer.tsx",[],["122","123"],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\MainProfile.tsx",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\New.tsx",[],["124","125"],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\index.tsx",["126"],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\AppLayoutContainer.tsx",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\ProfileContainer.tsx",["127","128","129"],"import React, {useMemo} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {menuTabs, TabsTypes, UserTypes} from \"../Constants\";\r\nimport Header from \"../Header/Header\";\r\nimport MainProfileContainer from \"./features/MainProfileContainer\";\r\nimport {useAsync} from \"@umijs/hooks\";\r\nimport {getCookieByName} from \"../Auth/Login\";\r\n\r\nconst getCurrentFields = (userId): Promise<any> => {\r\n    const token = getCookieByName('access_token');\r\n    return fetch(`http://backend/BackEnd/personal/registration.php?TOKEN=${token}&USER_ID=${userId}`).then(res => res.json());\r\n};\r\n\r\nconst ProfileContainer = () => {\r\n\r\n    const { userId } : UserTypes = useParams();\r\n    const { currentTab }: TabsTypes = useParams();\r\n    const { data, loading } = useAsync(() => getCurrentFields(userId) , []);\r\n\r\n    const getHeaderNameByCurrentTab = useMemo(() => {\r\n        switch (Number(currentTab)) {\r\n            case menuTabs.MESSAGES:\r\n                return 'Сообщения';\r\n            case menuTabs.NEWS:\r\n                return 'Новости';\r\n            case menuTabs.EVENTS:\r\n                return 'Все мероприятия';\r\n            case menuTabs.PROFILE:\r\n                return `@${userId}`;\r\n            case menuTabs.EDIT:\r\n                return 'Редактирование профиля'\r\n            default:\r\n                return 'Новости'\r\n        }\r\n    }, [currentTab]);\r\n\r\n    return (\r\n        <div>\r\n            <Header title={getHeaderNameByCurrentTab} isAuth/>\r\n            <MainProfileContainer currentTab={Number(currentTab)}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileContainer;\r\n","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\reportWebVitals.ts",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\useEffectWithSkipDidMount.js",["130","131","132"],"import React, { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * Хук с пропуском componentDidMount. Приблизительный аналог componentDidUpdate.\r\n * Требуется в случае, если нужно ждать подгрузки данных.\r\n * @param {function} fn - исполняемая функция\r\n * @param {Array} deps - массив зависимостей\r\n * @param {function} fnExit - функция при unmount\r\n */\r\nconst useEffectWithSkipDidMount = (fn, deps, fnExit) => {\r\n    const didMountRef = useRef(false);\r\n    useEffect(() => {\r\n        if (didMountRef.current) {\r\n            fn();\r\n        } else {\r\n            didMountRef.current = true;\r\n        }\r\n\r\n        return () => fnExit && fnExit()\r\n    }, deps);\r\n};\r\n\r\nexport default useEffectWithSkipDidMount;\r\n","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\EventsPage.tsx",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\NewsList.tsx",["133"],"import React, {useState} from 'react';\r\nimport New from \"./New\";\r\nimport {Col, Container} from \"react-bootstrap\";\r\nimport { useAsync } from \"@umijs/hooks\";\r\nimport {UserTypes} from \"../../../Constants\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getCookieByName} from \"../../../Auth/Login\";\r\nimport {SelectButton, SelectButtonContainer} from \"../../../EventsPosts\";\r\nimport AddNews from \"../../../addNews\";\r\n\r\nexport interface NewI {\r\n    ID: string\r\n    NAME: string\r\n    PREVIEW_PICTURE: string\r\n    PREVIEW_TEXT: string\r\n}\r\n\r\ninterface NewsListI {\r\n    count_news_all: string\r\n    this_page: number\r\n    values: Array<NewI>\r\n}\r\n//todo перенести в папку с методами\r\nconst getNews = (userId: string, token: any): Promise<NewsListI> => {\r\n    console.log(userId)\r\n    return fetch(`http://backend/BackEnd/news/news.php?TOKEN=${token}&PAGEN=1&USER_ID=${userId}`).then(res => res.json());\r\n};\r\n\r\n\r\nconst NewsList = () => {\r\n    const { userId } : UserTypes = useParams();\r\n    const token = getCookieByName('access_token')\r\n    const { data, loading, run } = useAsync<NewsListI>(() => getNews(userId, token) , []);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#ebedf0', height: \"100%\", width: \"100%\",  overflow: \"auto\"}}>\r\n            <Container style={{display: 'flex', padding: 0, justifyContent: 'center'}}>\r\n                <Col xl={10} xs={12}>\r\n                    <SelectButton style={{ margin: '12px auto',width: 250, color: '#fff' }} onClick={() => {\r\n                        setShowModal(true)\r\n                    }}>\r\n                        Добавить новость\r\n                    </SelectButton>\r\n                    {\r\n                        loading && <div>\r\n                            Загрузка...\r\n                        </div>\r\n                    }\r\n                    {\r\n                    !loading && data?.values?.map((el) => <New NAME={el.NAME}\r\n                                                              ID={el.ID}\r\n                                                              PREVIEW_PICTURE={el.PREVIEW_PICTURE}\r\n                                                              PREVIEW_TEXT={el.PREVIEW_TEXT}/> )\r\n                    }\r\n                </Col>\r\n\r\n            </Container>\r\n            <AddNews onAdd={() => run()} token={token} header={'Добавление новости'} userId={userId} show={showModal} handleClose={() => {\r\n                setShowModal(false)\r\n            }}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsList;\r\n","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Navigation.tsx",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Auth\\Login.tsx",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Auth\\Register.tsx",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Profile\\features\\components\\DetailEventsModal.tsx",["134"],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\App.tsx",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Auth\\AuthContainer.tsx",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\useDatePicker.ts",["135","136","137","138","139","140"],"import moment from \"moment\";\r\nimport { useCallback, useState } from \"react\";\r\nimport useEffectWithSkipDidMount from \"./useEffectWithSkipDidMount\";\r\nimport {DATE_FILTER_KEYS} from \"./Constants\";\r\n\r\nconst useDatePicker = (activeIntervalTab: number, timeIntervals: typeof DATE_FILTER_KEYS) => {\r\n    const now = moment().locale('ru');\r\n    const initialDateTo = now;\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    const getInitialDateFrom = useCallback(({ activeTab }) => {\r\n        switch (activeTab) {\r\n            case timeIntervals.day:\r\n                return [moment(initialDateTo), moment(initialDateTo)];\r\n            case timeIntervals.weak:\r\n                return [moment(initialDateTo), moment(initialDateTo).endOf('week').add(1,'days')];\r\n            case timeIntervals.month:\r\n                return [moment(initialDateTo).startOf('month'), moment(initialDateTo).endOf('month')];\r\n            default: return [moment(initialDateTo).startOf('month'), moment(initialDateTo)];\r\n        }\r\n    }, []);\r\n\r\n    const [dateFrom, setDateFrom] = useState(getInitialDateFrom({ activeTab: activeIntervalTab })[0]);\r\n\r\n\r\n    const [dateTo, setDateTo] = useState(getInitialDateFrom({ activeTab: activeIntervalTab })[1]);\r\n\r\n    // магические числа означают минимальную разницу между сегодняшней датой и той, которая в dateFrom\r\n    const getDurationByStatusTab = useCallback((activeTab) => {\r\n        switch (activeTab) {\r\n            case timeIntervals.weak:\r\n                return 7;\r\n            case timeIntervals.month:\r\n                return 31;\r\n            case timeIntervals.day:\r\n                return 1;\r\n            default: return 1;\r\n        }\r\n    }, [])\r\n\r\n    const getPrevDates = useCallback((activeTab, dateToLocal) => {\r\n        const duration = moment.duration(dateToLocal.diff(moment(now)));\r\n        if (Math.floor(duration.asDays()) <= getDurationByStatusTab(activeTab)) {\r\n            setDisabled(true);\r\n            const [initialDateFromLocal, initialDateToLocal] = getInitialDateFrom({ activeTab });\r\n            return [initialDateFromLocal, initialDateToLocal]\r\n        }\r\n        switch (activeTab) {\r\n            case timeIntervals.day:\r\n                return [moment(dateToLocal).subtract(1, 'days'), moment(dateToLocal).subtract(1, 'days')];\r\n            case timeIntervals.weak:\r\n                return [moment(dateToLocal).subtract(7, 'days').isoWeekday(1), moment(dateToLocal).subtract(7, 'days')];\r\n            case timeIntervals.month:\r\n                return [moment(dateToLocal).subtract(1, 'months').startOf('month'), moment(dateToLocal).subtract(1, 'months').endOf('month')];\r\n            default: return [moment(dateToLocal).subtract(1, 'days'), moment(dateToLocal).subtract(1, 'days')];\r\n        }\r\n    }, [activeIntervalTab]);\r\n\r\n\r\n    const getNextDates = useCallback((activeTab, dateFromLocal) => {\r\n        const futureWeek = moment(dateFromLocal).add(1, 'week');\r\n        const futureWeekEnd = moment(futureWeek).add(6, 'days');\r\n\r\n        const futureMonth = moment(dateFromLocal).add(1, 'months');\r\n        const futureMonthEnd = moment(futureMonth).endOf('month');\r\n\r\n        const futureDay = moment(dateFromLocal).add(1, 'days')\r\n\r\n        switch (activeTab) {\r\n            case timeIntervals.day:\r\n                return [futureDay, futureDay];\r\n            case timeIntervals.weak:\r\n                return [futureWeek, futureWeekEnd];\r\n            case timeIntervals.month:\r\n                return [futureMonth, futureMonthEnd];\r\n            default: return [futureDay, futureDay];\r\n        }\r\n    }, [dateFrom, activeIntervalTab, dateTo]);\r\n\r\n    const onPrevDateClick = useCallback(() => {\r\n        const [currentDateFrom, currentDateTo] = getPrevDates(activeIntervalTab, dateTo);\r\n        setDateFrom(currentDateFrom);\r\n        setDateTo(currentDateTo);\r\n    }, [activeIntervalTab, dateTo]);\r\n\r\n    const onNextDateClick = useCallback(() => {\r\n        const [currentDateFrom, currentDateTo] = getNextDates(activeIntervalTab, dateFrom);\r\n        setDateFrom(currentDateFrom);\r\n        setDateTo(currentDateTo)\r\n    }, [activeIntervalTab, dateFrom]);\r\n\r\n    useEffectWithSkipDidMount(() => {\r\n        const [currentDateFrom, setCurrentDateTO] = getInitialDateFrom({ activeTab: activeIntervalTab });\r\n        setDateFrom(currentDateFrom);\r\n        setDateTo(setCurrentDateTO);\r\n    }, [activeIntervalTab], () => {});\r\n\r\n    return [dateFrom, dateTo, onPrevDateClick, onNextDateClick, disabled]\r\n};\r\n\r\nexport default useDatePicker;\r\n",["141","142"],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Constants.ts",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Header\\Header.tsx",["143"],"import React from 'react';\r\nimport {Col, Container} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport settings from '../../images/settings.png'\r\nimport {HeaderTypes} from \"../Constants\";\r\nimport logo from '../../images/logo.png'\r\n\r\n\r\nconst Header = ({title,isAuth = false}: HeaderTypes) => {\r\n    return (\r\n            <div style={{ position: 'sticky', top: 0, zIndex: 2, background: '#fff', boxShadow: '0 0 10px rgba(0,0,0,0.5)' }}>\r\n                <Container style={{ display:'flex', justifyContent: 'space-between',padding: '8px'}}>\r\n                    <Link to={'/'} style={{alignSelf: 'center', fontWeight: 500, color: '#000', fontSize: 20}}>\r\n                        {title}\r\n                        {!isAuth ? <img width={100} src={logo} alt=\"\"/>: ''}\r\n                    </Link>\r\n                    {\r\n                        isAuth ? <div>\r\n                            <img src={settings} style={{width: 32, marginTop: 4, cursor: 'pointer'}} alt=\"\"/>\r\n                        </div>: ''\r\n                    }\r\n                </Container>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Preview\\Preview.tsx",[],"C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Footer\\Footer.tsx",["144"],"import React from 'react';\r\nimport {Button, Col, Container} from \"react-bootstrap\";\r\nimport homeIcon from '../../images/home.png'\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {UserTypes} from \"../Constants\";\r\n\r\ntype FooterT = {\r\n    isMobile?: boolean\r\n}\r\n\r\nconst Footer = ({isMobile}: FooterT): React.ReactElement => {\r\n    const { userId } : UserTypes = useParams();\r\n    if (!isMobile) {\r\n        return <div></div>\r\n    }\r\n    return (\r\n        <Container style={{ position: 'fixed', bottom: 0, left: 0, boxShadow: '0 0 10px rgba(0,0,0,0.5)',background: '#fff', zIndex: 2 }}>\r\n           <div className=\"footer\" >\r\n               <div style={{ width: '100%', display: 'flex', justifyContent: 'space-around' }}>\r\n                   <Link to={`/profile/${userId}/1`}>\r\n                       <Col className='footer__item' xs={4} md={6} xl={2} style={{textAlign: 'center'}}>\r\n                           <img src={homeIcon} alt=\"\"/>\r\n                       </Col>\r\n                   </Link>\r\n                   <Link to={`/profile/${userId}/2`}>\r\n                       <Col className='footer__item' xs={4} md={6} xl={2} style={{textAlign: 'center'}}>\r\n                           <img src={homeIcon} alt=\"\"/>\r\n                       </Col>\r\n                   </Link>\r\n                   <Link to={`/profile/${userId}/3`}>\r\n                       <Col className='footer__item' xs={4} md={6} xl={2} style={{textAlign: 'center'}}>\r\n                           <img src={homeIcon} alt=\"\"/>\r\n                       </Col>\r\n                   </Link>\r\n               </div>\r\n           </div>\r\n       </Container>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Chat\\Chat.tsx",["145"],"import React, {useMemo} from 'react';\r\nimport {Col, Container} from \"react-bootstrap\";\r\nimport ChatItem from \"./ChatItem\";\r\nimport NavPanel from \"../Navigation\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\n\r\nconst Chat = () => {\r\n    const socket = new WebSocket('ws://127.0.0.1:9000');\r\n    socket.onmessage = (message) => {\r\n        console.log(message.data)\r\n    };\r\n\r\n    const currentComponent = useMemo(() => {\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Container style={{display: 'flex', justifyContent: 'center', padding: 0}}>\r\n            <NavPanel />\r\n            <div style={{height: \"100%\", width: \"100%\",  overflow: \"auto\"}}>\r\n                <div style={{display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\r\n                    <Col xs={12} style={{textAlign: 'center', height: 100}}>Список диалогов</Col>\r\n                    <ChatItem socket={socket}/>\r\n                    <ChatItem socket={socket}/>\r\n                    <ChatItem socket={socket}/>\r\n\r\n                </div>\r\n            </div>\r\n            <Footer isMobile={false}/>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\Chat\\ChatItem.tsx",["146"],"import React from 'react';\r\nimport {Col} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ChatItem = ({socket}) => {\r\n    const lol = () => {\r\n        socket.send('hui')\r\n    };\r\n    return (\r\n        <div onClick={lol}>\r\n            <Col xs={12} style={{\r\n                cursor: 'pointer',\r\n                border: '1px solid #dce1e6',\r\n                display: 'flex',\r\n                background: '#fff',\r\n                marginBottom: 3\r\n            }}>\r\n                <div style={{padding:`11px 14px 8px 0px`}}>\r\n                    <img style={{borderRadius: 30}} src=\"https://sun1.megafon-nn.userapi.com/s/v1/ig2/sr3WxXtNjITPaFMBvHM9CzCuJkmtMcSDan1H2V4XpQ4WP93q1158bgnEsQUkDEsa4ueA_1NNpi2eC0Ptl8NxB6ZX.jpg?size=50x0&quality=96&crop=191,0,1537,1537&ava=1\" alt=\"\"/>\r\n                </div>\r\n                <div>\r\n                    <div style={{marginTop: 7, marginBottom: 3}}>Анастасия Проскурина</div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <img style={{width: 25, height: 25, borderRadius: 30}} src=\"https://sun1.megafon-nn.userapi.com/s/v1/ig1/0fKfxWlATfSL6372IuEIbVbDF8_UuLplT9oF0HLly_FpQb1U0jB5I6XPvkgBGboMzd5jTYlk.jpg?size=50x0&quality=96&crop=0,184,595,595&ava=1\" alt=\"\"/>\r\n                        <div> Текст сообщения </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatItem;\r\n","C:\\Users\\Gera\\Desktop\\шарага\\diplom\\FrontEnd\\src\\main\\addNews.tsx",["147","148"],"import React, {useState} from 'react';\r\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\r\n\r\nconst initialNewData = {\r\n    title: '',\r\n    description: '',\r\n    files: [],\r\n}\r\n\r\nconst AddNews = ({userId,onAdd, header, show, handleClose, token }) => {\r\n\r\n    const [newData, setNewData] = useState(initialNewData);\r\n    const [fileName, setFileName] = useState(\"Загрузите файл...\");\r\n    const [file, setFile] = useState({});\r\n    console.log(fileName)\r\n\r\n    return (\r\n        <Modal show={show} onHide={() => {\r\n            setNewData(initialNewData);\r\n            handleClose()\r\n        }} size='lg' style={{marginTop: '15%'}} >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{header}</Modal.Title>\r\n            </Modal.Header>\r\n            <Form id={'form'} onSubmit={(event) => {\r\n                event.preventDefault();\r\n                const form = event.currentTarget;\r\n                const formData = new FormData(form);\r\n                fetch('http://backend/BackEnd/admin/add_events.php', {\r\n                        body: formData,\r\n                        method: \"post\",\r\n                    }\r\n                )\r\n            }} >\r\n                <Modal.Body style={{background: 'rgb(235, 237, 240)'}}>\r\n                            <Col md={12} xl={12} style={{margin: 'auto', background: '#fff', padding: 9, marginBottom: 5, borderRadius: 5}}>\r\n                                <div style={{textAlign: 'left', fontWeight: 400, marginBottom: 10}}>Название новости</div>\r\n                                <Form.Group className={'input-text'} style={{margin: 0}} controlId=\"title\">\r\n                                    <Form.Control name='NAME' value={newData.title} onChange={(e) => setNewData({...newData, title: e.target.value}) } placeholder=\"Введите название новости\" />\r\n                                    <Form.Control name='TOKEN' value={token} type='hidden' />\r\n                                    <Form.Control name='USER_ID' value={userId} type='hidden' />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col md={12} xl={12} style={{margin: 'auto', background: '#fff', padding: 9, marginBottom: 5, borderRadius: 5}}>\r\n                                <div style={{textAlign: 'left', fontWeight: 400, marginBottom: 10}}>Описание</div>\r\n                                <Form.Group className={'input-text'} style={{margin: 0, height: 'auto'}} controlId=\"formBasicEmail\">\r\n                                    <Form.Control as=\"textarea\"\r\n                                                  name='DETAIL_TEXT'\r\n                                                  rows={4}\r\n                                                  value={newData.description}\r\n                                                  onChange={(e) => setNewData({...newData, description: e.target.value}) }\r\n                                                  placeholder=\"Введите название новости\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col md={12} xl={12} style={{margin: 'auto', background: '#fff', padding: 9, marginBottom: 5, borderRadius: 5}}>\r\n                                <Form.Group>\r\n                                    <Form.File\r\n                                        type=\"file\"\r\n                                        name='PREVIEW_PICTURE'\r\n                                        id=\"inputGroupFile01\"\r\n                                        label={fileName}\r\n                                        data-browse=\"Выбрать файл\"\r\n                                        onChange={(e) => {\r\n                                            setFile(e.target.files[0]);\r\n                                            setFileName(e.target.files[0].name)\r\n                                        } }\r\n                                        custom\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => {\r\n                        setNewData(initialNewData);\r\n                        handleClose();\r\n                    }}>\r\n                        Закрыть\r\n                    </Button>\r\n                    <Button variant=\"success\" type=\"submit\">\r\n                        Добавить\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNews;\r\n",{"ruleId":"149","severity":1,"message":"150","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":7,"column":57,"nodeType":"151","messageId":"152","endLine":7,"endColumn":66},{"ruleId":"154","severity":1,"message":"155","line":45,"column":8,"nodeType":"156","endLine":45,"endColumn":44,"suggestions":"157"},{"ruleId":"149","severity":1,"message":"158","line":49,"column":19,"nodeType":"151","messageId":"152","endLine":49,"endColumn":26},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":8,"column":9,"nodeType":"151","messageId":"152","endLine":8,"endColumn":18},{"ruleId":"165","severity":1,"message":"167","line":18,"column":13,"nodeType":"151","messageId":"152","endLine":18,"endColumn":17},{"ruleId":"165","severity":1,"message":"158","line":18,"column":19,"nodeType":"151","messageId":"152","endLine":18,"endColumn":26},{"ruleId":"154","severity":1,"message":"168","line":35,"column":8,"nodeType":"156","endLine":35,"endColumn":20,"suggestions":"169"},{"ruleId":"149","severity":1,"message":"170","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"171","line":20,"column":8,"nodeType":"151","endLine":20,"endColumn":12},{"ruleId":"154","severity":1,"message":"172","line":20,"column":8,"nodeType":"151","endLine":20,"endColumn":12,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"174","line":8,"column":23,"nodeType":"151","messageId":"152","endLine":8,"endColumn":44},{"ruleId":"165","severity":1,"message":"167","line":22,"column":27,"nodeType":"151","messageId":"152","endLine":22,"endColumn":31},{"ruleId":"154","severity":1,"message":"175","line":21,"column":8,"nodeType":"156","endLine":21,"endColumn":10,"suggestions":"176"},{"ruleId":"154","severity":1,"message":"177","line":39,"column":8,"nodeType":"156","endLine":39,"endColumn":10,"suggestions":"178"},{"ruleId":"154","severity":1,"message":"179","line":57,"column":8,"nodeType":"156","endLine":57,"endColumn":27,"suggestions":"180"},{"ruleId":"154","severity":1,"message":"177","line":78,"column":8,"nodeType":"156","endLine":78,"endColumn":45,"suggestions":"181"},{"ruleId":"154","severity":1,"message":"182","line":84,"column":8,"nodeType":"156","endLine":84,"endColumn":35,"suggestions":"183"},{"ruleId":"154","severity":1,"message":"184","line":90,"column":8,"nodeType":"156","endLine":90,"endColumn":37,"suggestions":"185"},{"ruleId":"159","replacedBy":"186"},{"ruleId":"161","replacedBy":"187"},{"ruleId":"165","severity":1,"message":"188","line":2,"column":9,"nodeType":"151","messageId":"152","endLine":2,"endColumn":12},{"ruleId":"165","severity":1,"message":"189","line":2,"column":9,"nodeType":"151","messageId":"152","endLine":2,"endColumn":15},{"ruleId":"165","severity":1,"message":"190","line":14,"column":11,"nodeType":"151","messageId":"152","endLine":14,"endColumn":27},{"ruleId":"165","severity":1,"message":"191","line":3,"column":9,"nodeType":"151","messageId":"152","endLine":3,"endColumn":13},{"ruleId":"165","severity":1,"message":"192","line":2,"column":35,"nodeType":"151","messageId":"152","endLine":2,"endColumn":38},{"ruleId":"165","severity":1,"message":"193","line":14,"column":12,"nodeType":"151","messageId":"152","endLine":14,"endColumn":16},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'UserTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'activeDateTab'. Either exclude it or remove the dependency array.","ArrayExpression",["194"],"'loading' is assigned a value but never used.","no-native-reassign",["195"],"no-negated-in-lhs",["196"],["195"],["196"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","'data' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'userId'. Either include it or remove the dependency array.",["197"],"'React' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'fn' and 'fnExit'. Either include them or remove the dependency array. If 'fn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["198"],"'SelectButtonContainer' is defined but never used.","React Hook useCallback has missing dependencies: 'initialDateTo', 'timeIntervals.day', 'timeIntervals.month', and 'timeIntervals.weak'. Either include them or remove the dependency array.",["199"],"React Hook useCallback has missing dependencies: 'timeIntervals.day', 'timeIntervals.month', and 'timeIntervals.weak'. Either include them or remove the dependency array.",["200"],"React Hook useCallback has missing dependencies: 'getDurationByStatusTab', 'getInitialDateFrom', 'now', 'timeIntervals.day', 'timeIntervals.month', and 'timeIntervals.weak'. Either include them or remove the dependency array.",["201"],["202"],"React Hook useCallback has a missing dependency: 'getPrevDates'. Either include it or remove the dependency array.",["203"],"React Hook useCallback has a missing dependency: 'getNextDates'. Either include it or remove the dependency array.",["204"],["195"],["196"],"'Col' is defined but never used.","'Button' is defined but never used.","'currentComponent' is assigned a value but never used.","'Link' is defined but never used.","'Row' is defined but never used.","'file' is assigned a value but never used.",{"desc":"205","fix":"206"},"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [currentDateInterval]",{"range":"223","text":"224"},"Update the dependencies array to be: [currentTab, userId]",{"range":"225","text":"226"},"Update the dependencies array to be: [fn, fnExit]",{"range":"227","text":"228"},"Update the dependencies array to be: [initialDateTo, timeIntervals.day, timeIntervals.month, timeIntervals.weak]",{"range":"229","text":"230"},"Update the dependencies array to be: [timeIntervals.day, timeIntervals.month, timeIntervals.weak]",{"range":"231","text":"232"},"Update the dependencies array to be: [getDurationByStatusTab, getInitialDateFrom, now, timeIntervals.day, timeIntervals.month, timeIntervals.weak]",{"range":"233","text":"234"},"Update the dependencies array to be: [timeIntervals.day, timeIntervals.weak, timeIntervals.month]",{"range":"235","text":"236"},"Update the dependencies array to be: [activeIntervalTab, dateTo, getPrevDates]",{"range":"237","text":"238"},"Update the dependencies array to be: [activeIntervalTab, dateFrom, getNextDates]",{"range":"239","text":"240"},[1889,1925],"[currentDateInterval]",[1346,1358],"[currentTab, userId]",[645,649],"[fn, fnExit]",[1017,1019],"[initialDateTo, timeIntervals.day, timeIntervals.month, timeIntervals.weak]",[1680,1682],"[timeIntervals.day, timeIntervals.month, timeIntervals.weak]",[2766,2785],"[getDurationByStatusTab, getInitialDateFrom, now, timeIntervals.day, timeIntervals.month, timeIntervals.weak]",[3573,3610],"[timeIntervals.day, timeIntervals.weak, timeIntervals.month]",[3837,3864],"[activeIntervalTab, dateTo, getPrevDates]",[4092,4121],"[activeIntervalTab, dateFrom, getNextDates]"]